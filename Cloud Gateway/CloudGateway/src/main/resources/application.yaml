server:
  port : 9092


spring:
  application:
    name: API-GATEWAY
  config:
    import: configserver:http://${ :localhost}:9095
  cloud:
    gateway:
      routes:
        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: ORDER-SERVICE
                fallbackuri: forward:/orderServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
#                redis-rate-limiter.requestedTokens: 1
#                key-resolver: "userKeySolver"
        - id: PAYMENT-SERVICE
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: PAYMENT-SERVICE
                fallbackuri: forward:/paymentServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
#                redis-rate-limiter.requestedTokens: 1
#                key-resolver: "userKeySolver"
        - id: PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: PRODUCT-SERVICE
                fallbackuri: forward:/productServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
#                redis-rate-limiter.requestedTokens: 1
#                key-resolver: "userKeySolver"


#okta:
#  oauth2:
#    issuer: https://dev-86993682.okta.com/oauth2/default
#    audience: api://default
#    client-id: 0oa7ez8zz7ZKJODoZ5d7
#    client-secret: aeOHALY0FvlTomxEUn5uo8brHtJcGJ2-1uw0FPc_
#    scopes: openid, profile, email, offline_access

